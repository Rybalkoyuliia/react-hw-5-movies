{"version":3,"file":"static/js/888.87a35724.chunk.js","mappings":"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","sources":["webpack://react-hw-5-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","hooks/useHttp.js","webpack://react-hw-5-movies/./src/pages/MoviePage/MoviePage.module.css?f915","pages/MoviePage/MoviePage.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader_container\":\"Loader_loader_container__U7Y0c\"};","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.loader_container}>\n      <RotatingLines\n        visible={true}\n        height=\"96\"\n        width=\"96\"\n        color=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        strokeColor=\"grey\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst useHttp = (func, parametr) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await func(parametr);\n        setData(response);\n      } catch (err) {\n        setError(err);\n        toast.error(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [func, parametr]);\n\n  return [data, error, loading];\n};\n\nexport default useHttp;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MoviePage_movie_container__E+WeV\",\"title_item\":\"MoviePage_title_item__q114r\",\"movie_descr_list\":\"MoviePage_movie_descr_list__69ieY\",\"movie_descr_item\":\"MoviePage_movie_descr_item__BMJip\",\"descr\":\"MoviePage_descr__ROOeJ\",\"additional_info_container\":\"MoviePage_additional_info_container__BOIrN\",\"additional_info_title\":\"MoviePage_additional_info_title__Cdtot\",\"additional_info_list\":\"MoviePage_additional_info_list__qLaM3\",\"additional_info_item\":\"MoviePage_additional_info_item__KUNAQ\",\"backBtn\":\"MoviePage_backBtn__tZ-DG\"};","import React, { useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieById } from 'services/API';\nimport s from './MoviePage.module.css';\nimport useHttp from 'hooks/useHttp';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie] = useHttp(fetchMovieById, id);\n\n  const location = useLocation();\n\n  const backBtnRef = useRef(location.state?.from || '/');\n\n  if (!movie) {\n    return <Loader />;\n  }\n\n  const {\n    original_title,\n    release_date,\n    vote_average,\n    vote_count,\n    overview,\n    genres,\n    poster_path,\n    tagline,\n  } = movie;\n  const movieURL = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  return (\n    <>\n      <Link className={s.backBtn} to={backBtnRef.current}>\n        Back\n      </Link>\n      <div className={s.movie_container}>\n        <img src={movieURL} alt={tagline} />\n        <ul className={s.movie_descr_list}>\n          <li className={s.title_item}>\n            <h3>\n              {original_title} ({release_date.slice(0, 4)})\n            </h3>\n          </li>\n          <li className={s.movie_descr_item}>\n            <h4>Overview:</h4>\n            <p className={s.descr}>{overview}</p>\n          </li>\n          <li className={s.movie_descr_item}>\n            <h4>Rating:</h4>\n            <ul>\n              <li>\n                <p className={s.descr}>\n                  <span>Stars:</span> {Math.ceil(vote_average)}/10\n                </p>\n              </li>\n              <li>\n                <p className={s.descr}>\n                  <span>Voters:</span> {vote_count} people\n                </p>\n              </li>\n            </ul>\n          </li>\n          <li className={s.movie_descr_item}>\n            <h4>Genres:</h4>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id} className={s.descr}>\n                  {genre.name}\n                </li>\n              ))}\n            </ul>\n          </li>\n          <li>\n            <div className={s.additional_info_container}>\n              <h2 className={s.additional_info_title}>\n                Additional Information:\n              </h2>\n              <nav>\n                <ul className={s.additional_info_list}>\n                  <li className={s.additional_info_item}>\n                    <NavLink to=\"cast\">Cast</NavLink>\n                  </li>\n                  <li className={s.additional_info_item}>\n                    <NavLink to=\"reviews\">Reviews</NavLink>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMWRhN2ZhMzBjMjg4NTU0NDNmN2YyMDFmNDNlZTRjOCIsIm5iZiI6MTc0MDM2ODg2Ny43MzgsInN1YiI6IjY3YmJlYmUzYmY1MjFmMTkwZjBhODk2MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.EFwr4LaQKEuESAlDYYsAzQxG9q4WvzFF1ly-0RKrvi4';\n\naxios.defaults.headers.common['accept'] = 'application/json';\n\naxios.defaults.params = {\n  language: 'en-US',\n};\n\n// axios.defaults.headers.common['api_key'] = '31da7fa30c28855443f7f201f43ee4c8';\n\nexport const fetchFavoriteMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchMovieById = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchMovieReviwes = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const { data } = await axios.get('/search/movie', { params: { query } });\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["_jsx","className","s","children","RotatingLines","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","strokeColor","func","parametr","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","t0","toast","message","finish","stop","apply","arguments","_location$state","id","useParams","_useHttp","useHttp","fetchMovieById","movie","location","useLocation","backBtnRef","useRef","state","from","Loader","original_title","release_date","vote_average","vote_count","overview","genres","poster_path","tagline","movieURL","concat","_jsxs","_Fragment","Link","to","current","src","alt","slice","Math","ceil","map","genre","name","NavLink","Outlet","axios","language","fetchFavoriteMovies","_yield$axios$get","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchMovieCredits","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieReviwes","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","params","_x4"],"sourceRoot":""}